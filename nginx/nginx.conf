worker_processes 1;

events { worker_connections 1024; }

http {
  lua_shared_dict ip_counters 10m;

  init_by_lua_block {
    local redis = require "resty.redis"
  }

  server {
    listen 80;

    location /login {
      access_by_lua_block {
        local limit = 100
        local ip = ngx.var.remote_addr
        local dict = ngx.shared.ip_counters
        local reqs, err = dict:get(ip)
        if not reqs then
          dict:set(ip, 1, 60)  -- expire in 60s
        elseif reqs > limit then
          return ngx.redirect("http://honeypot:4001/login")
        else
          dict:incr(ip, 1)
        end
      }

      proxy_pass http://backend:4000;
    }
  }
}
